# Generated by Django 5.2.6 on 2025-09-10 15:28

import django.contrib.postgres.indexes
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('modeling', '0001_initial'),
        ('workspace', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('scope', models.CharField(help_text='Ámbito donde ocurrió el error', max_length=32)),
                ('message', models.TextField(help_text='Mensaje de error')),
                ('stack', models.TextField(blank=True, help_text='Stack trace del error', null=True)),
                ('context', models.JSONField(blank=True, help_text='Contexto adicional del error', null=True)),
                ('ts', models.DateTimeField(help_text='Timestamp del error')),
            ],
            options={
                'indexes': [models.Index(fields=['scope', 'ts'], name='telemetry_e_scope_3265bd_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('entity_type', models.CharField(help_text='Tipo de entidad modificada', max_length=32)),
                ('entity_id', models.UUIDField(help_text='ID de la entidad modificada')),
                ('action', models.CharField(help_text='Acción realizada (create/update/delete)', max_length=16)),
                ('before', models.JSONField(blank=True, help_text='Estado anterior de la entidad', null=True)),
                ('after', models.JSONField(blank=True, help_text='Estado posterior de la entidad', null=True)),
                ('ts', models.DateTimeField(help_text='Timestamp de la acción')),
                ('actor', models.ForeignKey(help_text='Usuario que realizó la acción', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['entity_type', 'entity_id', 'ts'], name='telemetry_a_entity__83f283_idx')],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('type', models.CharField(help_text='Tipo de evento', max_length=64)),
                ('payload', models.JSONField(help_text='Datos adicionales del evento')),
                ('ts', models.DateTimeField(help_text='Timestamp del evento')),
                ('diagram', models.ForeignKey(blank=True, help_text='Diagrama relacionado al evento', null=True, on_delete=django.db.models.deletion.RESTRICT, to='modeling.diagram')),
                ('organization', models.ForeignKey(blank=True, help_text='Organización relacionada al evento', null=True, on_delete=django.db.models.deletion.RESTRICT, to='workspace.organization')),
                ('project', models.ForeignKey(blank=True, help_text='Proyecto relacionado al evento', null=True, on_delete=django.db.models.deletion.RESTRICT, to='workspace.project')),
                ('user', models.ForeignKey(blank=True, help_text='Usuario que generó el evento', null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['type', 'ts'], name='telemetry_e_type_86a86f_idx'), models.Index(fields=['project', 'ts'], name='telemetry_e_project_d2c71e_idx'), django.contrib.postgres.indexes.GinIndex(fields=['payload'], name='telemetry_e_payload_e7517b_gin')],
            },
        ),
        migrations.CreateModel(
            name='UsageStat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Fecha de la métrica')),
                ('metric_name', models.CharField(help_text='Nombre de la métrica', max_length=64)),
                ('metric_value', models.BigIntegerField(help_text='Valor de la métrica')),
                ('project', models.ForeignKey(blank=True, help_text='Proyecto asociado (opcional para métricas globales)', null=True, on_delete=django.db.models.deletion.RESTRICT, to='workspace.project')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('date', 'project', 'metric_name'), name='unique_daily_project_metric')],
            },
        ),
    ]
