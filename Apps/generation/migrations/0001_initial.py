# Generated by Django 5.2.1 on 2025-09-09 17:21

import django.contrib.postgres.indexes
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('modeling', '0001_initial'),
        ('workspace', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StorageRef',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('provider', models.CharField(help_text='Proveedor de almacenamiento', max_length=16)),
                ('bucket', models.CharField(help_text='Bucket o contenedor', max_length=120)),
                ('object_key', models.CharField(help_text='Clave del objeto en el almacenamiento', max_length=512)),
                ('url', models.CharField(blank=True, help_text='URL de acceso directo', max_length=512, null=True)),
                ('content_type', models.CharField(blank=True, help_text='Tipo MIME del contenido', max_length=80, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación de la referencia')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre de la plantilla', max_length=120)),
                ('language_target', models.CharField(help_text='Lenguaje/framework objetivo (ej. SPRING_BOOT)', max_length=32)),
                ('version', models.CharField(help_text='Versión de la plantilla', max_length=20)),
                ('config', models.JSONField(help_text='Configuración de la plantilla')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación de la plantilla')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('name', 'language_target', 'version'), name='unique_template_name_lang_version')],
            },
        ),
        migrations.CreateModel(
            name='GenerationJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('QUEUED', 'En cola'), ('RUNNING', 'Ejecutando'), ('SUCCEEDED', 'Exitoso'), ('FAILED', 'Fallido')], help_text='Estado del trabajo de generación', max_length=10)),
                ('started_at', models.DateTimeField(blank=True, help_text='Momento de inicio de la generación', null=True)),
                ('finished_at', models.DateTimeField(blank=True, help_text='Momento de finalización', null=True)),
                ('metrics', models.JSONField(blank=True, help_text='Métricas del proceso de generación', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del trabajo')),
                ('diagram', models.ForeignKey(help_text='Diagrama base para la generación', on_delete=django.db.models.deletion.RESTRICT, to='modeling.diagram')),
                ('diagram_version', models.ForeignKey(help_text='Versión específica del diagrama', on_delete=django.db.models.deletion.RESTRICT, to='modeling.diagramversion')),
                ('project', models.ForeignKey(help_text='Proyecto para el cual se genera código', on_delete=django.db.models.deletion.RESTRICT, to='workspace.project')),
                ('requested_by', models.ForeignKey(help_text='Usuario que solicitó la generación', on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(help_text='Plantilla utilizada para la generación', on_delete=django.db.models.deletion.RESTRICT, to='generation.template')),
            ],
        ),
        migrations.CreateModel(
            name='GenerationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('level', models.CharField(help_text='Nivel del log (INFO, WARN, ERROR, etc.)', max_length=16)),
                ('message', models.TextField(help_text='Mensaje del log')),
                ('ts', models.DateTimeField(help_text='Timestamp del mensaje')),
                ('job', models.ForeignKey(help_text='Trabajo asociado al log', on_delete=django.db.models.deletion.CASCADE, to='generation.generationjob')),
            ],
            options={
                'indexes': [models.Index(fields=['job', 'ts'], name='generation__job_id_cc846b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Artifact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('kind', models.CharField(choices=[('ZIP_BACKEND', 'Backend comprimido'), ('SWAGGER_JSON', 'Especificación Swagger JSON'), ('SWAGGER_YAML', 'Especificación Swagger YAML'), ('SQL_SCRIPTS', 'Scripts SQL')], help_text='Tipo de artefacto generado', max_length=15)),
                ('filename', models.CharField(help_text='Nombre del archivo', max_length=255)),
                ('size_bytes', models.BigIntegerField(help_text='Tamaño del archivo en bytes')),
                ('sha256', models.CharField(help_text='Hash SHA256 del archivo', max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación del artefacto')),
                ('job', models.ForeignKey(help_text='Trabajo que generó el artefacto', on_delete=django.db.models.deletion.CASCADE, to='generation.generationjob')),
                ('storage_ref', models.ForeignKey(help_text='Referencia de almacenamiento', on_delete=django.db.models.deletion.RESTRICT, to='generation.storageref')),
            ],
            options={
                'indexes': [models.Index(fields=['job'], name='generation__job_id_a4d39f_idx')],
            },
        ),
        migrations.CreateModel(
            name='SwaggerSpec',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Identificador único universal', primary_key=True, serialize=False)),
                ('version', models.CharField(default='3.0', help_text='Versión de OpenAPI', max_length=16)),
                ('spec_json', models.JSONField(help_text='Especificación OpenAPI en formato JSON')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha de creación de la especificación')),
                ('job', models.ForeignKey(help_text='Trabajo que generó la especificación', on_delete=django.db.models.deletion.RESTRICT, to='generation.generationjob')),
            ],
            options={
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['spec_json'], name='generation__spec_js_ea81e1_gin')],
            },
        ),
        migrations.AddIndex(
            model_name='generationjob',
            index=models.Index(fields=['project', 'status'], name='generation__project_b966c9_idx'),
        ),
        migrations.AddIndex(
            model_name='generationjob',
            index=models.Index(fields=['diagram_version'], name='generation__diagram_426390_idx'),
        ),
    ]
